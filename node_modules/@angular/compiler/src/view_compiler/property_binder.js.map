{"version":3,"file":"property_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/property_binder.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,eAAe,EAAC,MAAM,eAAe;OAGtC,EAAC,SAAS,EAAC,MAAM,gBAAgB;OACjC,EAAC,WAAW,EAAE,iBAAiB,EAAC,MAAM,gBAAgB;OACtD,KAAK,CAAC,MAAM,sBAAsB;OAClC,EAAC,WAAW,IAAI,qBAAqB,EAAkB,gCAAgC,EAAC,MAAM,wBAAwB;OACtH,EAAsD,mBAAmB,EAAC,MAAM,iCAAiC;OAGjH,EAAC,cAAc,EAAC,MAAM,mBAAmB;OAIzC,EAAC,iBAAiB,EAAE,cAAc,EAAC,MAAM,aAAa;OAEtD,EAAC,uBAAuB,EAAE,oBAAoB,EAAC,MAAM,wBAAwB;AAEpF,6BAA6B,SAAiB;IAC5C,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,WAAS,SAAW,CAAC,CAAC;AAChD,CAAC;AAED,6BAA6B,SAAiB;IAC5C,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAW,SAAW,CAAC,CAAC,CAAE,6BAA6B;AAC3E,CAAC;AAED;IACE,oBAAmB,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;IAAG,CAAC;IAClD,iBAAC;AAAD,CAAC,AAFD,IAEC;AAED,mBACI,IAAiB,EAAE,WAA0B,EAAE,gBAA2B,EAC1E,OAAqB,EAAE,MAAqB,EAAE,YAAoB;IACpE,IAAI,eAAe,GAAG,uBAAuB,CACzC,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IACnF,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;QAChC,qCAAqC;QACrC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,EAAE,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC;QACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IAED,EAAE,CAAC,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACxC,IAAI,sBAAsB,GAAG,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QAC7F,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,CAAC,OAAO,CACV,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1F,EAAE,CAAC,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,UAAU,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAChF,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;AACH,CAAC;AAED,cACI,IAAiB,EAAE,WAA0B,EAAE,SAAyB,EACxE,gBAA2B,EAAE,OAAqB,EAAE,OAAsB,EAC1E,MAAqB,EAAE,YAAoB;IAC7C,IAAM,UAAU,GAAG,SAAS,CAAC,IAAI,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;IACjG,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC;IACT,CAAC;IAED,2EAA2E;IAC3E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnF,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC3B,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;SAC/D,MAAM,EAAE,CAAC,CAAC;IAEzC,IAAI,SAAS,GAAiB,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7F,iBAAiB,CAAC,aAAa,EAAE,SAAS,EAAE,WAAW;KACxD,CAAC,CAAC;IACH,EAAE,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;QAC3B,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CACvB,SAAS,EACT,OAAO,CAAC,MAAM,CAAC,CAAc,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC;AAED,+BACI,SAAuB,EAAE,WAAwB,EAAE,IAAiB;IACtE,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC;IAC/D,IAAI,WAAW,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACpD,IAAI,UAAU,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACnD,IAAI,CAAC,mCAAmC,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAE1F,IAAI,CACA,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EACrE,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;aACvB,UAAU,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;aAC5D,MAAM,EAAE,CAAC,EACf,IAAI,CAAC,mCAAmC,EAAE,YAAY,CAAC,CAAC;AAC9D,CAAC;AAED,gCACI,UAAqC,EAAE,OAAqB,EAAE,cAA8B,EAC5F,UAAmB,EAAE,cAAsC;IAC7D,IAAI,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;IAC/B,IAAI,UAAU,GAAG,cAAc,CAAC,UAAU,CAAC;IAC3C,UAAU,CAAC,OAAO,CAAC,UAAC,SAAS;QAC3B,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,mCAAmC,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC7F,IAAI,SAAS,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,WAAW,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;QACpD,IAAI,cAAc,GAAiB,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACxE,IAAI,WAAW,GAAiB,cAAc,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACvE,IAAI,WAAW,GAAkB,EAAE,CAAC;QACpC,IAAI,aAAa,GAAG,IAAI,CAAC,mCAAmC,CAAC;QAC7D,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACvB,KAAK,mBAAmB,CAAC,QAAQ;gBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACpC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;gBAClF,CAAC;gBACD,WAAW,CAAC,IAAI,CACZ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;qBACvB,UAAU,CACP,oBAAoB,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;qBAC9E,MAAM,EAAE,CAAC,CAAC;gBACnB,KAAK,CAAC;YACR,KAAK,mBAAmB,CAAC,SAAS;gBAChC,WAAW;oBACP,WAAW,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC3F,WAAW,CAAC,IAAI,CACZ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;qBACvB,UAAU,CACP,qBAAqB,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;qBAC/E,MAAM,EAAE,CAAC,CAAC;gBACnB,KAAK,CAAC;YACR,KAAK,mBAAmB,CAAC,KAAK;gBAC5B,WAAW,CAAC,IAAI,CACZ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;qBACvB,UAAU,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;qBACnF,MAAM,EAAE,CAAC,CAAC;gBACnB,KAAK,CAAC;YACR,KAAK,mBAAmB,CAAC,KAAK;gBAC5B,IAAI,QAAQ,GAAiB,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;gBACpE,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC9B,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtD,CAAC;gBAED,WAAW,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBACvE,WAAW,CAAC,IAAI,CACZ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;qBACvB,UAAU,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;qBACnF,MAAM,EAAE,CAAC,CAAC;gBACnB,KAAK,CAAC;YACR,KAAK,mBAAmB,CAAC,SAAS;gBAChC,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC;gBAC7C,IAAM,aAAW,GAAkB,EAAE,CAAC;gBAEtC,IAAM,eAAa,GAAG,SAAS,CAAC,IAAI,CAAC;gBACrC,IAAM,cAAc,GAChB,UAAU,GAAG,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;gBAE/E,IAAM,eAAe,GACjB,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,eAAa,CAAC,CAAC,CAAC;gBAE1F,kEAAkE;gBAClE,6DAA6D;gBAC7D,IAAM,eAAe,GAAG,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;gBACzD,IAAM,gBAAgB,GAAG,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;gBACpF,IAAM,wBAAsB,GAAG,CAAC,CAAC,QAAQ,CAAC,sBAAsB,GAAG,eAAa,CAAC,CAAC;gBAElF,WAAW,CAAC,IAAI,CACZ,wBAAsB;qBACjB,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC1B,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,cAAc,CAAC,MAAM,CAAC,gBAAgB,CAAC;yBAClC,WAAW,CAAC,eAAe,EAAE,cAAc,CAAC;oBAC1E,WAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,eAAe,EAAE,WAAW,CAAC;iBAC/E,CAAC,CAAC;qBACF,UAAU,EAAE,CAAC,CAAC;gBAEvB,aAAW,CAAC,IAAI,CAAC,wBAAsB;qBACjB,GAAG,CAAC,eAAe,CAAC,MAAM,CACvB,CAAC,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;qBAC/D,UAAU,EAAE,CAAC,CAAC;gBAEpC,cAAc,CAAC,OAAO,CAAC,UAAA,QAAQ;oBAC7B,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,SAAS,KAAK,eAAa,CAAC,CAAC,CAAC;wBACjE,IAAI,aAAa,GAAG,QAAQ,CAAC,iBAAiB,CAAC,wBAAsB,CAAC,CAAC;wBACvE,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBAChC,aAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAClC,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAW,CAAC,CAAC;gBAExC,KAAK,CAAC;QACV,CAAC;QAED,IAAI,CACA,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,aAAa,EAClF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC;AAED,wBACI,SAAkC,EAAE,WAAyB;IAC/D,IAAI,SAAiB,CAAC;IACtB,MAAM,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QAClC,KAAK,eAAe,CAAC,IAAI;YACvB,MAAM,CAAC,WAAW,CAAC,CAAE,0BAA0B;QACjD,KAAK,eAAe,CAAC,IAAI;YACvB,SAAS,GAAG,MAAM,CAAC;YACnB,KAAK,CAAC;QACR,KAAK,eAAe,CAAC,KAAK;YACxB,SAAS,GAAG,OAAO,CAAC;YACpB,KAAK,CAAC;QACR,KAAK,eAAe,CAAC,MAAM;YACzB,SAAS,GAAG,QAAQ,CAAC;YACrB,KAAK,CAAC;QACR,KAAK,eAAe,CAAC,GAAG;YACtB,SAAS,GAAG,KAAK,CAAC;YAClB,KAAK,CAAC;QACR,KAAK,eAAe,CAAC,YAAY;YAC/B,SAAS,GAAG,cAAc,CAAC;YAC3B,KAAK,CAAC;QACR;YACE,MAAM,IAAI,KAAK,CAAC,gDAA8C,SAAS,CAAC,eAAe,MAAG,CAAC,CAAC;IAChG,CAAC;IACD,IAAI,GAAG,GAAG,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACrD,IAAI,IAAI,GACJ,CAAC,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC;IAChG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC1C,CAAC;AAED,iCACI,UAAqC,EAAE,cAA8B,EACrE,cAAsC;IACxC,sBAAsB,CAClB,UAAU,EAAE,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;AAC/F,CAAC;AAED,uCACI,YAA0B,EAAE,iBAA+B,EAAE,cAA8B,EAC3F,cAAsC;IACxC,sBAAsB,CAClB,YAAY,CAAC,cAAc,EAAE,iBAAiB,EAAE,cAAc,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5F,CAAC;AAED,oCACI,YAA0B,EAAE,wBAAsC,EAClE,cAA8B;IAChC,IAAI,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;IAC/B,IAAI,2BAA2B,GAAG,IAAI,CAAC,2BAA2B,CAAC;IACnE,2BAA2B,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC;IAE/F,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;QAChC,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9D,2BAA2B,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC5E,IAAI,WAAW,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;QACpD,IAAM,UAAU,GAAG,SAAS,CACxB,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,2BAA2B,EAClF,YAAY,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACT,CAAC;QACD,2BAA2B,CAAC,OAAO,CAAC,wBAAwB;aACnB,UAAU,CACP,WAAS,KAAK,CAAC,aAAe,EAC9B;YACE,WAAW,EAAE,iBAAiB,CAAC,aAAa;YAC5C,UAAU,CAAC,WAAW,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;SAC3C,CAAC;aACL,MAAM,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IACH,IAAI,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,WAAW;QACjD,CAAC,gCAAgC,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IAC9E,IAAI,0BAA0B,GAAG,wBAAwB,CAAC,UAAU,CAChE,uBAAuB,EACvB,CAAC,CAAC,CAAC,SAAS,EAAE,cAAc,CAAC,UAAU,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC,CAAC;IAC/E,IAAM,0BAA0B,GAAG,YAAY;QAC3C,IAAI,CAAC,CAAC,MAAM,CAAC,0BAA0B,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC;iBAC1C,UAAU,CAAC,iBAAiB,EAAE,EAAE,CAAC;iBACjC,MAAM,EAAE,CAAC,CAAC;QACzD,0BAA0B,CAAC,MAAM,EAAE,CAAC;IACxC,2BAA2B,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClE,CAAC;AAED,8BACI,UAAwB,EAAE,QAAgB,EAAE,KAAmB;IACjE,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;SAClE,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;SAC9E,MAAM,EAAE,CAAC;AAChB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '@angular/core';\n\nimport * as cdAst from '../expression_parser/ast';\nimport {isPresent} from '../facade/lang';\nimport {Identifiers, resolveIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {EMPTY_STATE as EMPTY_ANIMATION_STATE, LifecycleHooks, isDefaultChangeDetectionStrategy} from '../private_import_core';\nimport {BoundElementPropertyAst, BoundTextAst, DirectiveAst, PropertyBindingType} from '../template_parser/template_ast';\nimport {camelCaseToDashCase} from '../util';\n\nimport {CompileBinding} from './compile_binding';\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompileView} from './compile_view';\nimport {DetectChangesVars, ViewProperties} from './constants';\nimport {CompileEventListener} from './event_binder';\nimport {convertCdExpressionToIr, temporaryDeclaration} from './expression_converter';\n\nfunction createBindFieldExpr(exprIndex: number): o.ReadPropExpr {\n  return o.THIS_EXPR.prop(`_expr_${exprIndex}`);\n}\n\nfunction createCurrValueExpr(exprIndex: number): o.ReadVarExpr {\n  return o.variable(`currVal_${exprIndex}`);  // fix syntax highlighting: `\n}\n\nclass EvalResult {\n  constructor(public forceUpdate: o.Expression) {}\n}\n\nfunction evalCdAst(\n    view: CompileView, currValExpr: o.ReadVarExpr, parsedExpression: cdAst.AST,\n    context: o.Expression, method: CompileMethod, bindingIndex: number): EvalResult {\n  var checkExpression = convertCdExpressionToIr(\n      view, context, parsedExpression, DetectChangesVars.valUnwrapper, bindingIndex);\n  if (!checkExpression.expression) {\n    // e.g. an empty expression was given\n    return null;\n  }\n\n  if (checkExpression.temporaryCount) {\n    for (let i = 0; i < checkExpression.temporaryCount; i++) {\n      method.addStmt(temporaryDeclaration(bindingIndex, i));\n    }\n  }\n\n  if (checkExpression.needsValueUnwrapper) {\n    var initValueUnwrapperStmt = DetectChangesVars.valUnwrapper.callMethod('reset', []).toStmt();\n    method.addStmt(initValueUnwrapperStmt);\n  }\n  method.addStmt(\n      currValExpr.set(checkExpression.expression).toDeclStmt(null, [o.StmtModifier.Final]));\n  if (checkExpression.needsValueUnwrapper) {\n    return new EvalResult(DetectChangesVars.valUnwrapper.prop('hasWrappedValue'));\n  } else {\n    return new EvalResult(null);\n  }\n}\n\nfunction bind(\n    view: CompileView, currValExpr: o.ReadVarExpr, fieldExpr: o.ReadPropExpr,\n    parsedExpression: cdAst.AST, context: o.Expression, actions: o.Statement[],\n    method: CompileMethod, bindingIndex: number) {\n  const evalResult = evalCdAst(view, currValExpr, parsedExpression, context, method, bindingIndex);\n  if (!evalResult) {\n    return;\n  }\n\n  // private is fine here as no child view will reference the cached value...\n  view.fields.push(new o.ClassField(fieldExpr.name, null, [o.StmtModifier.Private]));\n  view.createMethod.addStmt(o.THIS_EXPR.prop(fieldExpr.name)\n                                .set(o.importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n                                .toStmt());\n\n  var condition: o.Expression = o.importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n    DetectChangesVars.throwOnChange, fieldExpr, currValExpr\n  ]);\n  if (evalResult.forceUpdate) {\n    condition = evalResult.forceUpdate.or(condition);\n  }\n  method.addStmt(new o.IfStmt(\n      condition,\n      actions.concat([<o.Statement>o.THIS_EXPR.prop(fieldExpr.name).set(currValExpr).toStmt()])));\n}\n\nexport function bindRenderText(\n    boundText: BoundTextAst, compileNode: CompileNode, view: CompileView) {\n  var bindingIndex = view.bindings.length;\n  view.bindings.push(new CompileBinding(compileNode, boundText));\n  var currValExpr = createCurrValueExpr(bindingIndex);\n  var valueField = createBindFieldExpr(bindingIndex);\n  view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n\n  bind(\n      view, currValExpr, valueField, boundText.value, view.componentContext,\n      [o.THIS_EXPR.prop('renderer')\n           .callMethod('setText', [compileNode.renderNode, currValExpr])\n           .toStmt()],\n      view.detectChangesRenderPropertiesMethod, bindingIndex);\n}\n\nfunction bindAndWriteToRenderer(\n    boundProps: BoundElementPropertyAst[], context: o.Expression, compileElement: CompileElement,\n    isHostProp: boolean, eventListeners: CompileEventListener[]) {\n  var view = compileElement.view;\n  var renderNode = compileElement.renderNode;\n  boundProps.forEach((boundProp) => {\n    var bindingIndex = view.bindings.length;\n    view.bindings.push(new CompileBinding(compileElement, boundProp));\n    view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n    var fieldExpr = createBindFieldExpr(bindingIndex);\n    var currValExpr = createCurrValueExpr(bindingIndex);\n    var oldRenderValue: o.Expression = sanitizedValue(boundProp, fieldExpr);\n    var renderValue: o.Expression = sanitizedValue(boundProp, currValExpr);\n    var updateStmts: o.Statement[] = [];\n    var compileMethod = view.detectChangesRenderPropertiesMethod;\n    switch (boundProp.type) {\n      case PropertyBindingType.Property:\n        if (view.genConfig.logBindingUpdate) {\n          updateStmts.push(logBindingUpdateStmt(renderNode, boundProp.name, renderValue));\n        }\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod(\n                    'setElementProperty', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Attribute:\n        renderValue =\n            renderValue.isBlank().conditional(o.NULL_EXPR, renderValue.callMethod('toString', []));\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod(\n                    'setElementAttribute', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Class:\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod('setElementClass', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Style:\n        var strValue: o.Expression = renderValue.callMethod('toString', []);\n        if (isPresent(boundProp.unit)) {\n          strValue = strValue.plus(o.literal(boundProp.unit));\n        }\n\n        renderValue = renderValue.isBlank().conditional(o.NULL_EXPR, strValue);\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod('setElementStyle', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Animation:\n        compileMethod = view.animationBindingsMethod;\n        const detachStmts: o.Statement[] = [];\n\n        const animationName = boundProp.name;\n        const targetViewExpr: o.Expression =\n            isHostProp ? compileElement.appElement.prop('componentView') : o.THIS_EXPR;\n\n        const animationFnExpr =\n            targetViewExpr.prop('componentType').prop('animations').key(o.literal(animationName));\n\n        // it's important to normalize the void value as `void` explicitly\n        // so that the styles data can be obtained from the stringmap\n        const emptyStateValue = o.literal(EMPTY_ANIMATION_STATE);\n        const unitializedValue = o.importExpr(resolveIdentifier(Identifiers.UNINITIALIZED));\n        const animationTransitionVar = o.variable('animationTransition_' + animationName);\n\n        updateStmts.push(\n            animationTransitionVar\n                .set(animationFnExpr.callFn([\n                  o.THIS_EXPR, renderNode, oldRenderValue.equals(unitializedValue)\n                                               .conditional(emptyStateValue, oldRenderValue),\n                  renderValue.equals(unitializedValue).conditional(emptyStateValue, renderValue)\n                ]))\n                .toDeclStmt());\n\n        detachStmts.push(animationTransitionVar\n                             .set(animationFnExpr.callFn(\n                                 [o.THIS_EXPR, renderNode, oldRenderValue, emptyStateValue]))\n                             .toDeclStmt());\n\n        eventListeners.forEach(listener => {\n          if (listener.isAnimation && listener.eventName === animationName) {\n            let animationStmt = listener.listenToAnimation(animationTransitionVar);\n            updateStmts.push(animationStmt);\n            detachStmts.push(animationStmt);\n          }\n        });\n\n        view.detachMethod.addStmts(detachStmts);\n\n        break;\n    }\n\n    bind(\n        view, currValExpr, fieldExpr, boundProp.value, context, updateStmts, compileMethod,\n        view.bindings.length);\n  });\n}\n\nfunction sanitizedValue(\n    boundProp: BoundElementPropertyAst, renderValue: o.Expression): o.Expression {\n  let enumValue: string;\n  switch (boundProp.securityContext) {\n    case SecurityContext.NONE:\n      return renderValue;  // No sanitization needed.\n    case SecurityContext.HTML:\n      enumValue = 'HTML';\n      break;\n    case SecurityContext.STYLE:\n      enumValue = 'STYLE';\n      break;\n    case SecurityContext.SCRIPT:\n      enumValue = 'SCRIPT';\n      break;\n    case SecurityContext.URL:\n      enumValue = 'URL';\n      break;\n    case SecurityContext.RESOURCE_URL:\n      enumValue = 'RESOURCE_URL';\n      break;\n    default:\n      throw new Error(`internal error, unexpected SecurityContext ${boundProp.securityContext}.`);\n  }\n  let ctx = ViewProperties.viewUtils.prop('sanitizer');\n  let args =\n      [o.importExpr(resolveIdentifier(Identifiers.SecurityContext)).prop(enumValue), renderValue];\n  return ctx.callMethod('sanitize', args);\n}\n\nexport function bindRenderInputs(\n    boundProps: BoundElementPropertyAst[], compileElement: CompileElement,\n    eventListeners: CompileEventListener[]): void {\n  bindAndWriteToRenderer(\n      boundProps, compileElement.view.componentContext, compileElement, false, eventListeners);\n}\n\nexport function bindDirectiveHostProps(\n    directiveAst: DirectiveAst, directiveInstance: o.Expression, compileElement: CompileElement,\n    eventListeners: CompileEventListener[]): void {\n  bindAndWriteToRenderer(\n      directiveAst.hostProperties, directiveInstance, compileElement, true, eventListeners);\n}\n\nexport function bindDirectiveInputs(\n    directiveAst: DirectiveAst, directiveWrapperInstance: o.Expression,\n    compileElement: CompileElement) {\n  var view = compileElement.view;\n  var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n  detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\n  directiveAst.inputs.forEach((input) => {\n    var bindingIndex = view.bindings.length;\n    view.bindings.push(new CompileBinding(compileElement, input));\n    detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n    var currValExpr = createCurrValueExpr(bindingIndex);\n    const evalResult = evalCdAst(\n        view, currValExpr, input.value, view.componentContext, detectChangesInInputsMethod,\n        bindingIndex);\n    if (!evalResult) {\n      return;\n    }\n    detectChangesInInputsMethod.addStmt(directiveWrapperInstance\n                                            .callMethod(\n                                                `check_${input.directiveName}`,\n                                                [\n                                                  currValExpr, DetectChangesVars.throwOnChange,\n                                                  evalResult.forceUpdate || o.literal(false)\n                                                ])\n                                            .toStmt());\n  });\n  var isOnPushComp = directiveAst.directive.isComponent &&\n      !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n  let directiveDetectChangesExpr = directiveWrapperInstance.callMethod(\n      'detectChangesInternal',\n      [o.THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange]);\n  const directiveDetectChangesStmt = isOnPushComp ?\n      new o.IfStmt(directiveDetectChangesExpr, [compileElement.appElement.prop('componentView')\n                                                    .callMethod('markAsCheckOnce', [])\n                                                    .toStmt()]) :\n      directiveDetectChangesExpr.toStmt();\n  detectChangesInInputsMethod.addStmt(directiveDetectChangesStmt);\n}\n\nfunction logBindingUpdateStmt(\n    renderNode: o.Expression, propName: string, value: o.Expression): o.Statement {\n  return o.importExpr(resolveIdentifier(Identifiers.setBindingDebugInfo))\n      .callFn([o.THIS_EXPR.prop('renderer'), renderNode, o.literal(propName), value])\n      .toStmt();\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}